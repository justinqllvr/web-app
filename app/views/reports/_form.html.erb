<%= form_with(model: report, local: true) do |form| %>
  <% if report.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(report.errors.count, "error") %> prohibited this report from being saved:</h2>

      <ul>
      <% report.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <%= simple_form_for @report do |f| %>

      <div>
        Quel probl√®me voulez-vous signaler ?
      </div>

    <%= f.input :title, placeholder: "Titre", :label=> false %>

    <%= f.input :text, placeholder: "Description", :label=> false %>

    <%= f.input :latitude, placeholder: "Latitude", :input_html => {
        :id => "latitude"
      } %>
    <%= f.input :longitude, placeholder: "Longitude", :input_html => {
        :id => "longitude"
      } %>

    <%= f.hidden_field(:picture_cache)%>
    <%= f.file_field(:picture)%>

    <%= f.button :submit, value: "Enregistrer", class:"btn-success", disabled: true, id: "valider" %>
  <% end %>
    <div id="alert-localisation"></div>
    <button class="btn btn-outline-success" id="btn-loc">Localiser position</button>

  
<% end %>
<script type="text/javascript">
  window.onload = function() {
  var btn = document.getElementById("btn-loc");
  var long = document.getElementById("longitude");
  var lat = document.getElementById("latitude");
  var alertLoc = document.getElementById("alert-localisation");

  btn.addEventListener("click", getLocation);


  function getLocation() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(showPosition);
      // navigator.geolocation.watchPosition(showPosition, showError);
    } else {
      alertLoc.innerHTML = "Geolocation is not supported by this browser.";
    }

    function showPosition(position) {
      console.log('position');
      lat.value = position.coords.latitude;
      long.value = position.coords.longitude;

      document.getElementById("valider").disabled = false;

    }

    function showError(error) {
      console.log('error');
      switch(error.code) {
        case error.PERMISSION_DENIED:
          alertLoc.innerHTML = "User denied the request for Geolocation."
          break;
        case error.POSITION_UNAVAILABLE:
          alertLoc.innerHTML = "Location information is unavailable."
          break;
        case error.TIMEOUT:
          alertLoc.innerHTML = "The request to get user location timed out."
          break;
        case error.UNKNOWN_ERROR:
          alertLoc.innerHTML = "An unknown error occurred."
          break;
      }
    }
  }
}
</script> 